name: Pull Request - Open

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  phpcs:
    name: Specification style formatting
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run php cs fixer
        run: 'make test-phpcs'
  phpunit:
    name: (PHP ${{ matrix.php-versions }} on ${{ matrix.command-to-launch.name }})
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        command-to-launch: [
          {
            name: 'psalm',
            command: 'psalm',
          },
          {
            name: 'Unit tests',
            command: 'vendor/bin/phpunit --coverage-text',
          }
        ]
        php-versions: [ '8.1' ]
        phpunit-versions: [ 'latest' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: vimeo/psalm, phpunit
          coverage: xdebug
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Run test
        run: ${{matrix.command-to-launch.command}}
